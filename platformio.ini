; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .
default_envs = serial
extra_configs = platformio-*.ini

[env]
# https://github.com/platformio/platform-espressif32/issues/1092#issuecomment-1538156473
platform = https://github.com/platformio/platform-espressif32.git#35c40ed54872243894ad5c30172df5c98a95acca
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.9
board = esp32thing
board_build.partitions = default.csv
framework = arduino
targets = upload
monitor_speed = 115200
lib_deps =
    juerd/ESP-WiFiSettings@^3.8.0
    wifwaf/MH-Z19@^1.5.4
    bodmer/TFT_eSPI@^2.5.31
    256dpi/MQTT@^2.5.1

build_flags =
# ESP-WiFiSettings languages:
  -DLANGUAGE_EN
  -DLANGUAGE_NL
# ESP32 debugging:
#  -DCORE_DEBUG_LEVEL=5
# TFT_eSPI configuration:
  -DUSER_SETUP_LOADED=1
  -DST7789_DRIVER=1
  -DCGRAM_OFFSET=1
  -DTFT_WIDTH=135
  -DTFT_HEIGHT=240
  -DTFT_MOSI=19
  -DTFT_SCLK=18
  -DTFT_CS=5
  -DTFT_DC=16
  -DTFT_RST=-23
  -DTFT_BL=4
  -DTFT_BACKLIGHT_ON=HIGH
  -DLOAD_GLCD=1
  -DLOAD_FONT2=1
  -DLOAD_FONT4=1
  -DLOAD_FONT6=1
  -DLOAD_FONT7=1
  -DLOAD_FONT8=1
  -DLOAD_GFXFF=1
  -DSPI_FREQUENCY=40000000

[env:serial]
upload_protocol = esptool

[env:ota]
upload_protocol = espota
upload_port = operame-HEX_HERE.local
upload_flags =
    --port=3232
    --auth=PASSWORD_HERE
; Alternatively, instead of editing this file (which is annoying because it
; might end up being committed in git), you can create extra an extra config
; file.
; Just copy the [env:ota] section to a new file called platformio-NAME.ini
; and change [env:ota] to [env:NAME]. You can use this to OTA-update multiple
; Operames with a single command: pio run -t upload -e NAME -e NAME -e NAME
